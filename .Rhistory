"Title", "Halis GR", "Bold", "14", "#444444", "The title should be pithy and SEO-friendly. Titles should explain the content within the graph, not solely describe the axis labels.",
"Subtitle", "Halis GR", "Regular", "11", "#444444", "Use a subtitle if you need to expand or add clarification to your title.",
"Grid lines", NA, NA,"Major grid line- 0.5pt; Minor grid line - 0.25", "#EBEBEB", "Remove grid lines unless necessary.",
"X and Y axis titles", "Halis GR", "Bold", "11", "#444444", "X axis labels should be horizontal and Y axis labels should be vertical. Remove from the graph if the axis is obvious (i.e. year).",
"X and Y axis labels", "Halis GR", "Regular", "12", "#444444", "Labels should always be horizontal. Include units and punctuation (i.e. break large numbers with commas). To save space, consider adding a unit only for the first observation.",
"Axis ticks", NA, NA, NA, "#D3D3D3", NA,
"Legend title", "Halis GR", "Bold", "11", "#444444", NA,
"Key labels", "Halis GR", "Regular", "12", "#444444", "Key labels should always be horizontal.",
"Annotations", "Halis GR", "Regular", "11", "#444444", NA,
"Caption (source and notes)", "Halis GR", "Regular", "10", "#444444", NA,
"Small multiple labels", "Halis GR", "Bold", "10", "#444444", NA
) %>%
rename("rowname" = 'x')
library(gt)
gt_tbl <- gt(data = table)
gt_tbl %>%
tab_header(
title = md("**USSC data visualisation manual**")
) %>%
cols_label(
# `Graphical element` = md("**Graphical element**"),
`Font` = md("*Font*"),
`Fontface` = md("*Fontface*"),
`Size` = md("*Size*"),
`Colour` = md("*Colour*"),
`Notes` = md("***Notes***")
) %>%
tab_style(
style = gt::cells_text(
text_weight = "light",
text_size = 10),
locations = gt::cells_data(
columns = vars(Font, Fontface, Size, Colour, Notes))
)
gt_tbl %>%
tab_header(
title = md("**USSC data visualisation manual**")
) %>%
cols_label(
# `Graphical element` = md("**Graphical element**"),
`Font` = md("*Font*"),
`Fontface` = md("*Fontface*"),
`Size` = md("*Size*"),
`Colour` = md("*Colour*"),
`Notes` = md("***Notes***")
) %>%
tab_style(
style = gt::cell_text(
text_weight = "light",
text_size = 10),
locations = gt::cells_data(
columns = vars(Font, Fontface, Size, Colour, Notes))
)
gt_tbl %>%
tab_header(
title = md("**USSC data visualisation manual**")
) %>%
cols_label(
# `Graphical element` = md("**Graphical element**"),
`Font` = md("*Font*"),
`Fontface` = md("*Fontface*"),
`Size` = md("*Size*"),
`Colour` = md("*Colour*"),
`Notes` = md("***Notes***")
) %>%
tab_style(
style = gt::cell_text(
weight = "light",
size = 10),
locations = gt::cells_data(
columns = vars(Font, Fontface, Size, Colour, Notes))
)
gt_tbl %>%
tab_header(
title = md("**USSC data visualisation manual**")
) %>%
cols_label(
# `Graphical element` = md("**Graphical element**"),
`Font` = md("*Font*"),
`Fontface` = md("*Fontface*"),
`Size` = md("*Size*"),
`Colour` = md("*Colour*"),
`Notes` = md("***Notes***")
) %>%
tab_style(
style = gt::cell_text(
weight = "lighter",
size = 10),
locations = gt::cells_data(
columns = vars(Font, Fontface, Size, Colour, Notes))
)
pkgdown::build_site()
install.packages('fifystater')
library(albersusa)
# map_id creates the aesthetic mapping to the state name column in your data
ggplot() +
geom_sf(data = us_sf, size = 0.125, aes(fill = pop_2012), color = 'white') +
scale_fill_gradient(low="#4aace9", high="#2f2665") +
annotate("text", x = -88, y = 50, label = "Borders should (usually) be thin light lines", color = "purple") +
labs(x = "", y = "") +
theme(legend.position = "bottom",
panel.background = element_blank())
us_sf <- usa_sf("laea")
# map_id creates the aesthetic mapping to the state name column in your data
ggplot() +
geom_sf(data = us_sf, size = 0.125, aes(fill = pop_2012), color = 'white') +
scale_fill_gradient(low="#4aace9", high="#2f2665") +
annotate("text", x = -88, y = 50, label = "Borders should (usually) be thin light lines", color = "purple") +
labs(x = "", y = "") +
theme(legend.position = "bottom",
panel.background = element_blank())
# map_id creates the aesthetic mapping to the state name column in your data
ggplot() +
geom_sf(data = us_sf, size = 0.125, aes(fill = pop_2012), color = 'white') +
scale_fill_gradient(low="#4aace9", high="#2f2665") +
annotate("text", x = -88, y = 50, label = "Borders should (usually) be thin light lines", color = "purple") +
labs(x = "", y = "") +
theme(legend.position = "left",
panel.background = element_blank())
# map_id creates the aesthetic mapping to the state name column in your data
ggplot() +
geom_sf(data = us_sf, size = 0.125, aes(fill = pop_2012), color = 'white') +
scale_fill_gradient(low="#4aace9", high="#2f2665") +
annotate("text", x = -88, y = 100, label = "Borders should (usually) be thin light lines", color = "purple") +
labs(x = "", y = "") +
theme(legend.position = "left",
panel.background = element_blank())
# map_id creates the aesthetic mapping to the state name column in your data
ggplot() +
geom_sf(data = us_sf, size = 0.125, aes(fill = pop_2012), color = 'white') +
scale_fill_gradient(low="#4aace9", high="#2f2665") +
labs(x = "", y = "") +
theme(legend.position = "left",
panel.background = element_blank())
# map_id creates the aesthetic mapping to the state name column in your data
ggplot() +
geom_sf(data = us_sf, size = 0.125, aes(fill = pop_2012), color = 'white') +
scale_fill_gradient(low="#4aace9", high="#2f2665") +
labs(x = "", y = "", fill = "2012 population") +
theme(legend.position = "left",
panel.background = element_blank())
options(scipen = 999)
# map_id creates the aesthetic mapping to the state name column in your data
ggplot() +
geom_sf(data = us_sf, size = 0.125, aes(fill = pop_2012), color = 'white') +
scale_fill_gradient(low="#4aace9", high="#2f2665") +
labs(x = "", y = "", fill = "2012 population") +
theme(legend.position = "left",
panel.background = element_blank())
pkgdown::build_site()
pkgdown::build_site()
.Last.error.trace
one <- ggplot(data=economics, aes(x=date, y=pop))+
geom_line() +
theme_ussc() +
scale_y_continuous(labels = scales::comma) +
labs(title = "a) Standard line graph") +
theme(panel.grid.minor = element_blank()) +
# geom_text(aes("1990-03-01", 30000, label = "Lines are thin with a square edge", color = "purple"))
annotate("text", x = as.Date("1990-08-01"), y = 300000, label = "Lines are thin with a square edge", color = "purple") +
geom_curve(
aes(x = as.Date("1990-08-01"), y  = 295000, xend = as.Date("1995-08-01"), yend = 280000),
data = economics,
arrow = arrow(length = unit(0.03, "npc")),
colour = "purple",
curvature = 0.3) +
geom_curve(
aes(x = as.Date("1990-08-01"), y  = 305000, xend = as.Date("2014-08-01"), yend = 319000),
data = economics,
arrow = arrow(length = unit(0.03, "npc")),
colour = "purple",
curvature = -0.3)  +
labs(x = NULL,
y = "Population")
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
df3 <- data_summary(ToothGrowth, varname="len",
groupnames=c("supp", "dose"))
two <- ggplot(df3, aes(x=dose, y=len, group=supp, color=supp)) +
geom_errorbar(aes(ymin=len-sd, ymax=len+sd), width=.1,
position=position_dodge(0.05)) +
geom_line() +
geom_point() +
xlab("Dose (mg)") +
ylab("Tooth length") +
annotate("text", x = 1.2, y = 25, label = "Orange Juice", colour = ussc_colours("dark blue")) +
annotate("text", x = 2.1, y = 28, label = "Ascorbic\nacid", colour = ussc_colours("red")) +
scale_colour_ussc() +
labs(title = "b) Line graph with standard error bars",
subtitle = "The Effect of Vitamin C on Tooth Growth in Guinea Pigs") +
theme_ussc() +
theme(legend.position = 'none',
panel.grid.minor = element_blank())
cowplot::plot_grid(one, two, nrow = 2)
data_summary <- function(data, varname, groupnames){
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<- plyr::ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
df3 <- data_summary(ToothGrowth, varname="len",
groupnames=c("supp", "dose"))
two <- ggplot(df3, aes(x=dose, y=len, group=supp, color=supp)) +
geom_errorbar(aes(ymin=len-sd, ymax=len+sd), width=.1,
position=position_dodge(0.05)) +
geom_line() +
geom_point() +
xlab("Dose (mg)") +
ylab("Tooth length") +
annotate("text", x = 1.2, y = 25, label = "Orange Juice", colour = ussc_colours("dark blue")) +
annotate("text", x = 2.1, y = 28, label = "Ascorbic\nacid", colour = ussc_colours("red")) +
scale_colour_ussc() +
labs(title = "b) Line graph with standard error bars",
subtitle = "The Effect of Vitamin C on Tooth Growth in Guinea Pigs") +
theme_ussc() +
theme(legend.position = 'none',
panel.grid.minor = element_blank())
cowplot::plot_grid(one, two, nrow = 2)
pkgdown::build_site()
one <- ggplot(data=economics, aes(x=date, y=pop))+
geom_line() +
theme_ussc() +
scale_y_continuous(labels = scales::comma) +
labs(title = "a) Standard line graph") +
theme(panel.grid.minor = element_blank()) +
# geom_text(aes("1990-03-01", 30000, label = "Lines are thin with a square edge", color = "purple"))
annotate("text", x = as.Date("1990-08-01"), y = 300000, label = "Lines are thin with a square edge", color = "purple") +
geom_curve(
aes(x = as.Date("1990-08-01"), y  = 295000, xend = as.Date("1995-08-01"), yend = 280000),
data = economics,
arrow = arrow(length = unit(0.03, "npc")),
colour = "purple",
curvature = 0.3) +
geom_curve(
aes(x = as.Date("1990-08-01"), y  = 305000, xend = as.Date("2014-08-01"), yend = 319000),
data = economics,
arrow = arrow(length = unit(0.03, "npc")),
colour = "purple",
curvature = -0.3)  +
labs(x = NULL,
y = "Population")
data_summary <- function(data, varname, groupnames){
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<- plyr::ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
df3 <- data_summary(ToothGrowth, varname="len",
groupnames=c("supp", "dose"))
View(df3)
pkgdown::build_site()
remotes::install_github("rstudio/rmarkdown")
pkgdown::build_site()
librray(albersusa)
library(albersusa)
pkgdown::clean_site()
pkgdown::build_site()
ussc::ussc_colors("orange")
pkgdown::clean_site()
pkgdown::build_site()
pkgdown::build_favicons(overwrite = TRUE)
pkgdown::build_site()
ussc::ussc_colors("light blue")
ussc::ussc_colors("orange")
pkgdown::clean_site()
pkgdown::build_site()
roxygen2::roxygenise()
pkgbuild::build()
devtools::install_github('usstudiescentre/ussc')
pkgdown::clean_site()
pkgdown::build_site()
pkgbuild::build()
roxygen2::roxygenise()
pkgbuild::build()
devtools::install_github('usstudiescentre/ussc')
knitr::opts_chunk$set(
warning = FALSE,
message = FALSE,
comment = FALSE
)
library(ggplot2)
library(tidyverse)
library(fs)
library(ussc)
comms_kpi <-  ussc_confluence_table("950239240")
online_kpi_table1 <- comms_kpi[1][[1]]
head(online_kpi_table1)
??ussc_confluence_kpi_table
pub_kpi <- ussc_confluence_kpi_table("950239240")
View(pub_kpi)
pub_kpi <- ussc_confluence_kpi_table("1173357736")
View(pub_kpi)
pubs_calendar_version_history <- ussc_confluence_version_history("1020526593")
View(pubs_calendar_version_history)
pkgdown::clean_site()
pkgdown::build_site()
df <- tibble::tribble(~name, ~place, "Simon Jackman", "USSC")
ussc::ussc_google_create_custom_query(data = df, "name", "place")
ussc_google_create_custom_query <- function(.data, ...){
quos <- rlang::enquos(...)
.data %>%
tidyr::unite(custom_query, c(!!!(quos)),
sep = "%22+%22", remove = FALSE) %>%
dplyr::mutate(custom_query= gsub("\\s", "+", custom_query),
custom_query = paste0('%22', custom_query, '%22'))
}
df <- tibble::tribble(~name, ~place, "Simon Jackman", "USSC")
ussc::ussc_google_create_custom_query(data = df, "name", "place")
ussc_google_create_custom_query(data = df, "name", "place")
ussc_google_create_custom_query <- function(.data, ...){
quos <- rlang::enquos(...)
.data %>% tidyr::unite(custom_query, c(!!!(quos)),
sep = "%22+%22", remove = FALSE) %>%
dplyr::mutate(custom_query= gsub("\\s", "+", custom_query),
custom_query = paste0('%22', custom_query, '%22'))
}
ussc_google_create_custom_query(data = df, "name", "place")
ussc_google_create_custom_query <- function(.data, ...){
quos <- rlang::enquos(...)
.data %>% tidyr::unite(col = custom_query, c(!!!(quos)),
sep = "%22+%22", remove = FALSE) %>%
dplyr::mutate(custom_query= gsub("\\s", "+", custom_query),
custom_query = paste0('%22', custom_query, '%22'))
}
ussc_google_create_custom_query(data = df, "name", "place")
ussc_google_create_custom_query <- function(.data, ...){
quos <- rlang::enquos(...)
.data %>%
dplyr::transmute(p, custom_query = str_c(!!!(quos), sep="%22+%22")) %>%
# tidyr::unite(col = custom_query, c(!!!(quos)),
#       sep = "%22+%22", remove = FALSE) %>%
dplyr::mutate(custom_query= gsub("\\s", "+", custom_query),
custom_query = paste0('%22', custom_query, '%22'))
}
ussc_google_create_custom_query(data = df, "name", "place")
df
ussc_google_create_custom_query <- function(.data, ...){
quos <- rlang::enquos(...)
.data %>%
# dplyr::transmute(p, custom_query = str_c(!!!(quos), sep="%22+%22")) %>%
tidyr::unite(col = custom_query, c(!!!(quos)),
sep = "%22+%22", remove = FALSE) %>%
dplyr::mutate(custom_query= gsub("\\s", "+", custom_query),
custom_query = paste0('%22', custom_query, '%22'))
}
df
ussc_google_create_custom_query(data = df, "name", "place")
ussc_google_create_custom_query(data = df, name, place)
df %>% tidyr::unite(col = custom_query, c("name", "place"),
sep = "%22+%22", remove = FALSE)
ussc_google_create_custom_query <- function(.data, ...){
ussc_google_create_custom_query <- function(.data, ...){
# quos <- rlang::enquos(...)
.data %>%
# dplyr::transmute(p, custom_query = str_c(!!!(quos), sep="%22+%22")) %>%
tidyr::unite(col = custom_query, c(...,
sep = "%22+%22", remove = FALSE)) %>%
dplyr::mutate(custom_query= gsub("\\s", "+", custom_query),
custom_query = paste0('%22', custom_query, '%22'))
}
ussc_google_create_custom_query <- function(.data, ...){
# quos <- rlang::enquos(...)
.data %>%
# dplyr::transmute(p, custom_query = str_c(!!!(quos), sep="%22+%22")) %>%
tidyr::unite(col = custom_query, c(...,
sep = "%22+%22", remove = FALSE)) %>%
dplyr::mutate(custom_query= gsub("\\s", "+", custom_query),
custom_query = paste0('%22', custom_query, '%22'))
}
ussc_google_create_custom_query(data = df, "name", "place")
ussc_google_create_custom_query(data = df, name, place)
ussc_google_create_custom_query(data = df, df$name, df$place)
ussc_google_create_custom_query <- function(.data, ...){
# quos <- rlang::enquos(...)
.data %>%
# dplyr::transmute(p, custom_query = str_c(!!!(quos), sep="%22+%22")) %>%
tidyr::unite(col = custom_query, c(...),
sep = "%22+%22", remove = FALSE) %>%
dplyr::mutate(custom_query= gsub("\\s", "+", custom_query),
custom_query = paste0('%22', custom_query, '%22'))
}
ussc_google_create_custom_query(data = df, df$name, df$place)
ussc_google_create_custom_query(data = df, "name", "place")
tidyr::unite()
ussc_google_create_custom_query <- function(.data, ...){
# quos <- rlang::enquos(...)
.data %>%
dplyr::transmute(p, custom_query = str_c(..., sep="%22+%22")) %>%
# tidyr::unite(col = custom_query, c(...),
#       sep = "%22+%22", remove = FALSE) %>%
dplyr::mutate(custom_query= gsub("\\s", "+", custom_query),
custom_query = paste0('%22', custom_query, '%22'))
}
ussc_google_create_custom_query(data = df, "name", "place")
ussc_google_create_custom_query <- function(.data, ...){
# quos <- rlang::enquos(...)
.data %>%
dplyr::transmute(p, custom_query = str_c(..., sep="%22+%22")) # %>%
# tidyr::unite(col = custom_query, c(...),
#       sep = "%22+%22", remove = FALSE) %>%
# dplyr::mutate(custom_query= gsub("\\s", "+", custom_query),
#        custom_query = paste0('%22', custom_query, '%22'))
}
ussc_google_create_custom_query(data = df, "name", "place")
ussc_google_create_custom_query <- function(.data, ...){
quos <- rlang::enquos(...)
.data %>%
tidyr::unite(col = custom_query, c(!!!(quos)),
sep = "%22+%22", remove = FALSE) %>%
dplyr::mutate(custom_query= gsub("\\s", "+", custom_query),
custom_query = paste0('%22', custom_query, '%22'))
}
ussc_google_create_custom_query(data = df, "name", "place")
ussc_google_create_custom_query <- function(.data, ...){
quos <- rlang::enquos(...)
.data %>%
tidyr::unite(col = custom_query, ...,
sep = "%22+%22", remove = FALSE) %>%
dplyr::mutate(custom_query= gsub("\\s", "+", custom_query),
custom_query = paste0('%22', custom_query, '%22'))
}
ussc_google_create_custom_query(data = df, "name", "place")
ussc_google_create_custom_query <- function(.data, ...){
quos <- rlang::enquos(...)
.data %>%
tidyr::unite(col = custom_query, all_of(...),
sep = "%22+%22", remove = FALSE) %>%
dplyr::mutate(custom_query= gsub("\\s", "+", custom_query),
custom_query = paste0('%22', custom_query, '%22'))
}
ussc_google_create_custom_query(data = df, "name", "place")
ussc_google_create_custom_query(data = df, "name", "place")
ussc_google_create_custom_query <- function(.data, ...){
quos <- rlang::enquos(...)
.data %>%
tidyr::unite(col = custom_query, quos,
sep = "%22+%22", remove = FALSE) %>%
dplyr::mutate(custom_query= gsub("\\s", "+", custom_query),
custom_query = paste0('%22', custom_query, '%22'))
}
ussc_google_create_custom_query(data = df, "name", "place")
ussc_google_create_custom_query <- function(.data, ...){
quos <- rlang::enquos(...)
.data %>%
tidyr::unite(col = custom_query, ...,
sep = "%22+%22", remove = FALSE) %>%
dplyr::mutate(custom_query= gsub("\\s", "+", custom_query),
custom_query = paste0('%22', custom_query, '%22'))
}
ussc_google_create_custom_query(data = df, "name", "place")
ussc_google_create_custom_query <- function(.data, ...){
quos <- rlang::enquos(...)
.data %>%
tidyr::unite(col = custom_query, ...,
sep = "%22+%22", remove = FALSE) %>%
dplyr::mutate(custom_query= gsub("\\s", "+", custom_query),
custom_query = paste0('%22', custom_query, '%22'))
}
ussc_google_create_custom_query(data = df, "name", "place")
roxygen2::roxygenise()
pkgbuild::build()
devtools::install_github('usstudiescentre/ussc')
pkgdown::clean_site()
pkgdown::build_site()
devtools::install_github('usstudiescentre/ussc')
devtools::install_github('usstudiescentre/ussc', force = TRUE
)
devtools::install_github('usstudiescentre/ussc')
pkgdown::clean_site()
pkgdown::build_site()
ussc_pal
ussc_palettes()
roxygen2::roxygenise()
pkgbuild::build()
knitr::opts_chunk$set(
warning = FALSE,
message = FALSE,
comment = FALSE
)
example <- ggplot(iris, aes(Sepal.Width, Sepal.Length, colour = Species)) +
geom_point(size = 4, alpha=0.4) +
theme_ussc() +
labs(title="Halis GR S Bold", x="Halis GR Book: Sepal Width", y="Halis GR Book: Sepal Length", caption = "The data is from the Iris R package and is an example.") +
scale_colour_ussc("main", reverse=TRUE)
roxygen2::roxygenise()
pkgbuild::build()
devtools::install_github('ussc/usstudiescentre')
devtools::install_github('usstudiescentre/ussc')
pkgdown::clean_site()
pkgdown::build_site()
pkgdown::clean_site()
pkgdown::build_site()
pkgdown::clean_site()
pkgdown::build_site()
tidyverse::mpg
