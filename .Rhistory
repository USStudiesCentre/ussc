#           "Very good",
#           "Fairly good",
#           "Fairly bad",
#           "Very bad"
#         )
#         ),
#   str_detect(question,
#         'investments_owned') ~ factor(answer, levels = c(
#           "Yes",
#           "No",
#           "Refuse to say, or unsure"
#         )
#         ),
#   str_detect(question,
#         'favourability') ~ factor(answer, levels = c(
#           "Very favourable",
#           "Somewhat favourable",
#           "Somewhat unfavourable",
#           "Very unfavourable"
#         )
#         ),
#   # starts_with(question,
#   #       'importance_of_truly_being') ~ factor(answer, levels = c(
#   #         "Very important",
#   #         "Fairly important",
#   #         "Not very important",
#   #         "Not important at all"
#   #       )
#   #       ),
#   # starts_with(question,
#   #       'importance_rights') ~ factor(answer, levels = c(
#   #         "Extremely important",
#   #         "Very important",
#   #         "Moderately important",
#   #         "Slightly important",
#   #         "Not at all important"
#   #       )
#   #       ),
#   # starts_with(question,
#   #       'econ_mobility') ~ factor(answer, levels = c(
#   #         "Essential",
#   #         "Very important",
#   #         "Somewhat important",
#   #         "Not very important",
#   #         "Not important at all"
#   #       )
#   #       ),
#   # starts_with(question,
#   #       'fossil_fuels') ~ factor(answer, levels = c(
#   #         "Strongly support",
#   #         "Support",
#   #         "Neither support nor oppose",
#   #         "Oppose",
#   #         "Strongly oppose",
#   #         "Don't know"
#   #       )
#   #       ),
#   TRUE ~ .$answer
#   )) %>%
tidyr::drop_na(..., answer) %>%
dplyr::count(sample, ..., description_au,
description_us,
answer, wt = as.numeric(as.character(weight))) %>%
dplyr::group_by(sample, ..., description_us,  description_au) %>%
dplyr::mutate(proportion = round(n/sum(n)*100, 0)) %>%
dplyr::select(-n) %>%
dplyr::ungroup() %>%
tidyr::unite(subgroup, c(sample, !!!(quos)), sep = "_") %>%
tidyr::spread(subgroup, proportion)
}
df <- survey_data %>% prop_grouped_survey_question(starts_with("investments_owned"), gender, levels = c("Yes", "No", "Refuse to say, or unsure"))
prop_grouped_survey_question <- function(.data, questions, ..., levels) {
quos <- rlang::enquos(...)
.data %>%
dplyr::select(..., questions, weight, sample)  %>%
tidyr::gather("question", "answer",
.dots =  -c(!!!(quos), weight, sample),
na.rm = TRUE) %>%
dplyr::left_join(variables_in_long_file %>%
select(description_us, description_au, value),
by = c("question" = "value")) %>%
mutate(answer = factor(answer)) %>%
mutate(answer = fct_reorder(answer, !!!levels)) %>%
# mutate(answer = case_when(
#   # grepl(question,
#   #       "agree|politicians_trustworthy|political_acumen") ~ factor(answer,
#   #                                                          levels = c(
#   #                                                            "Strongly agree",
#   #                                                            "Agree",
#   #                                                            "Neither agree nor disagree",
#   #                                                            "Disagree",
#   #                                                            "Strongly disagree"
#   #                                                          )
#   #               ),
#   # starts_with(question,
#   #       'econ_investment') ~ factor(answer, levels = c(
#   #         "Much more economic investment",
#   #         "A little more economic investment",
#   #         "About the same amount of economic investment as now",
#   #         "A little less economic investment",
#   #         "Much less economic investment"
#   #       )
#   #       ),
#   str_detect(question,
#         'political_systems') ~ factor(answer, levels = c(
#           "Very good",
#           "Fairly good",
#           "Fairly bad",
#           "Very bad"
#         )
#         ),
#   str_detect(question,
#         'investments_owned') ~ factor(answer, levels = c(
#           "Yes",
#           "No",
#           "Refuse to say, or unsure"
#         )
#         ),
#   str_detect(question,
#         'favourability') ~ factor(answer, levels = c(
#           "Very favourable",
#           "Somewhat favourable",
#           "Somewhat unfavourable",
#           "Very unfavourable"
#         )
#         ),
#   # starts_with(question,
#   #       'importance_of_truly_being') ~ factor(answer, levels = c(
#   #         "Very important",
#   #         "Fairly important",
#   #         "Not very important",
#   #         "Not important at all"
#   #       )
#   #       ),
#   # starts_with(question,
#   #       'importance_rights') ~ factor(answer, levels = c(
#   #         "Extremely important",
#   #         "Very important",
#   #         "Moderately important",
#   #         "Slightly important",
#   #         "Not at all important"
#   #       )
#   #       ),
#   # starts_with(question,
#   #       'econ_mobility') ~ factor(answer, levels = c(
#   #         "Essential",
#   #         "Very important",
#   #         "Somewhat important",
#   #         "Not very important",
#   #         "Not important at all"
#   #       )
#   #       ),
#   # starts_with(question,
#   #       'fossil_fuels') ~ factor(answer, levels = c(
#   #         "Strongly support",
#   #         "Support",
#   #         "Neither support nor oppose",
#   #         "Oppose",
#   #         "Strongly oppose",
#   #         "Don't know"
#   #       )
#   #       ),
#   TRUE ~ .$answer
#   )) %>%
tidyr::drop_na(..., answer) %>%
dplyr::count(sample, ..., description_au,
description_us,
answer, wt = as.numeric(as.character(weight))) %>%
dplyr::group_by(sample, ..., description_us,  description_au) %>%
dplyr::mutate(proportion = round(n/sum(n)*100, 0)) %>%
dplyr::select(-n) %>%
dplyr::ungroup() %>%
tidyr::unite(subgroup, c(sample, !!!(quos)), sep = "_") %>%
tidyr::spread(subgroup, proportion)
}
df <- survey_data %>% prop_grouped_survey_question(starts_with("investments_owned"), gender, levels = c("Yes", "No", "Refuse to say, or unsure"))
prop_grouped_survey_question <- function(.data, questions, ..., levels) {
quos <- rlang::enquos(...)
.data %>%
dplyr::select(..., questions, weight, sample)  %>%
tidyr::gather("question", "answer",
.dots =  -c(!!!(quos), weight, sample),
na.rm = TRUE) %>%
dplyr::left_join(variables_in_long_file %>%
select(description_us, description_au, value),
by = c("question" = "value")) %>%
mutate(answer = factor(answer)) %>%
mutate(answer = fct_reorder(answer, !!!enquos(levels))) %>%
# mutate(answer = case_when(
#   # grepl(question,
#   #       "agree|politicians_trustworthy|political_acumen") ~ factor(answer,
#   #                                                          levels = c(
#   #                                                            "Strongly agree",
#   #                                                            "Agree",
#   #                                                            "Neither agree nor disagree",
#   #                                                            "Disagree",
#   #                                                            "Strongly disagree"
#   #                                                          )
#   #               ),
#   # starts_with(question,
#   #       'econ_investment') ~ factor(answer, levels = c(
#   #         "Much more economic investment",
#   #         "A little more economic investment",
#   #         "About the same amount of economic investment as now",
#   #         "A little less economic investment",
#   #         "Much less economic investment"
#   #       )
#   #       ),
#   str_detect(question,
#         'political_systems') ~ factor(answer, levels = c(
#           "Very good",
#           "Fairly good",
#           "Fairly bad",
#           "Very bad"
#         )
#         ),
#   str_detect(question,
#         'investments_owned') ~ factor(answer, levels = c(
#           "Yes",
#           "No",
#           "Refuse to say, or unsure"
#         )
#         ),
#   str_detect(question,
#         'favourability') ~ factor(answer, levels = c(
#           "Very favourable",
#           "Somewhat favourable",
#           "Somewhat unfavourable",
#           "Very unfavourable"
#         )
#         ),
#   # starts_with(question,
#   #       'importance_of_truly_being') ~ factor(answer, levels = c(
#   #         "Very important",
#   #         "Fairly important",
#   #         "Not very important",
#   #         "Not important at all"
#   #       )
#   #       ),
#   # starts_with(question,
#   #       'importance_rights') ~ factor(answer, levels = c(
#   #         "Extremely important",
#   #         "Very important",
#   #         "Moderately important",
#   #         "Slightly important",
#   #         "Not at all important"
#   #       )
#   #       ),
#   # starts_with(question,
#   #       'econ_mobility') ~ factor(answer, levels = c(
#   #         "Essential",
#   #         "Very important",
#   #         "Somewhat important",
#   #         "Not very important",
#   #         "Not important at all"
#   #       )
#   #       ),
#   # starts_with(question,
#   #       'fossil_fuels') ~ factor(answer, levels = c(
#   #         "Strongly support",
#   #         "Support",
#   #         "Neither support nor oppose",
#   #         "Oppose",
#   #         "Strongly oppose",
#   #         "Don't know"
#   #       )
#   #       ),
#   TRUE ~ .$answer
#   )) %>%
tidyr::drop_na(..., answer) %>%
dplyr::count(sample, ..., description_au,
description_us,
answer, wt = as.numeric(as.character(weight))) %>%
dplyr::group_by(sample, ..., description_us,  description_au) %>%
dplyr::mutate(proportion = round(n/sum(n)*100, 0)) %>%
dplyr::select(-n) %>%
dplyr::ungroup() %>%
tidyr::unite(subgroup, c(sample, !!!(quos)), sep = "_") %>%
tidyr::spread(subgroup, proportion)
}
df <- survey_data %>% prop_grouped_survey_question(starts_with("investments_owned"), gender, levels = c("Yes", "No", "Refuse to say, or unsure"))
levels(df$answer)
prop_grouped_survey_question <- function(.data, questions, ...) {
quos <- rlang::enquos(...)
.data %>%
dplyr::select(..., questions, weight, sample)  %>%
tidyr::gather("question", "answer",
.dots =  -c(!!!(quos), weight, sample),
na.rm = TRUE) %>%
dplyr::left_join(variables_in_long_file %>%
select(description_us, description_au, value),
by = c("question" = "value")) %>%
mutate(answer = factor(answer)) %>%
tidyr::drop_na(..., answer) %>%
dplyr::count(sample, ..., description_au,
description_us,
answer, wt = as.numeric(as.character(weight))) %>%
dplyr::group_by(sample, ..., description_us,  description_au) %>%
dplyr::mutate(proportion = round(n/sum(n)*100, 0)) %>%
dplyr::select(-n) %>%
dplyr::ungroup() %>%
tidyr::unite(subgroup, c(sample, !!!(quos)), sep = "_") %>%
tidyr::spread(subgroup, proportion)
}
df <- survey_data %>% prop_grouped_survey_question(starts_with("investments_owned"), gender) %>% mutate(answer = fct_recode(answer, c("Yes", "No", "Refuse to say, or unsure")))
df <- survey_data %>% prop_grouped_survey_question(starts_with("investments_owned"), gender) %>% mutate(answer = fct_relevel(answer, levels = c("Yes", "No", "Refuse to say, or unsure"))))
df <- survey_data %>% prop_grouped_survey_question(starts_with("investments_owned"), gender) %>% mutate(answer = fct_relevel(answer, levels = c("Yes", "No", "Refuse to say, or unsure")))
df
df <- survey_data %>% prop_grouped_survey_question(starts_with("investments_owned"), gender) %>% mutate(answer = fct_relevel(answer,  c("Yes", "No", "Refuse to say, or unsure")))
View(df)
df$answer
df <- survey_data %>% prop_grouped_survey_question(starts_with("investments_owned"), gender) %>% mutate(answer = fct_relevel(answer,  c("Yes", "No", "Refuse to say, or unsure"))) %>% group_by(description_au, answer) %>% arrange()
View(df)
View(survey_data)
View(df)
df <- survey_data %>% prop_grouped_survey_question(starts_with("investments_owned"), gender) %>% mutate(answer = fct_relevel(answer,  c("Yes", "No", "Refuse to say, or unsure"))) %>% arrange(description_au, answer)
View(df)
relevel_survey_answer <- function(.data, levels) {
.data %>%
dplyr::mutate(answer = fct_relevel(answer, levels)) %>%
dplyr::arange(description_us, answer)
}
df <- survey_data %>% prop_grouped_survey_question(starts_with("investments_owned"), gender) %>%
relevel_survey_answer(levels = c("Yes", "No", "Refuse to say, or unsure"))
relevel_survey_answer <- function(.data, levels) {
.data %>%
dplyr::mutate(answer = fct_relevel(answer, levels)) %>%
dplyr::arrange(description_us, answer)
}
df <- survey_data %>% prop_grouped_survey_question(starts_with("investments_owned"), gender) %>%
relevel_survey_answer(levels = c("Yes", "No", "Refuse to say, or unsure"))
View(df)
df <- survey_data %>% prop_grouped_survey_question(starts_with("importance_of"), gender) %>%
relevel_survey_answer(levels = c("Yes", "No", "Refuse to say, or unsure"))
df <- survey_data %>% prop_grouped_survey_question(starts_with("importance_of"), gender)
View(df)
df <- survey_data %>% prop_grouped_survey_question(starts_with("importance_of"), gender) %>%
relevel_survey_answer(levels = c("Very important", "Not very important","Fairly important", "Not important at all"))
View(df)
df <- survey_data %>% prop_grouped_survey_question(starts_with("importance_of"), gender) %>%
relevel_survey_answer(levels = c("Very important", "Fairly important","Not very important", "Not important at all"))
View(df)
setwd("..")
devtools::document()
devtools::install_github('usstudiescentre/ussc')
pkgdown::clean_site()
pkgdown::build_site()
pkgdown::clean_site()
pkgdown::build_site()
pkgdown::build_site()
knitr::opts_chunk$set(
warning = FALSE,
message = FALSE,
comment = FALSE,
echo = FALSE
)
library(tidyverse)
library(ussc)
library(gt)
library(fiftystater)
data("fifty_states") # this line is optional due to lazy data loading
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
# map_id creates the aesthetic mapping to the state name column in your data
ggplot(crimes, aes(map_id = state)) +
geom_map(aes(fill = Assault), map = fifty_states, colour = "white") +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_fill_gradient(low="#56B1F7", high="#132B43") +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
annotate("text", x = -88, y = 50, label = "Borders should (usually) be thin light lines", color = "purple") +
labs(x = "", y = "") +
theme(legend.position = "bottom",
panel.background = element_blank())
ussc_colours()
system.file("extdata", "logo.png", package = "ussc")
install_github('usstudiescentre/ussc', 'dev')
devtools::install_github('usstudiescentre/ussc', 'dev')
devtools::install_github('usstudiescentre/ussc', ref = 'dev', froce = TRUE)
devtools::install_github('usstudiescentre/ussc', ref = 'dev', force = TRUE)
system.file("extdata", package = "ussc")
devtools::install_github('usstudiescentre/ussc', ref = 'dev', force = TRUE)
system.file("extdata", package = "ussc")
system.file("extdata", "logo.png",  package = "ussc")
system.file("extdata", "logo.png", package="my_package")
system.file("logo.png", package="my_package")
system.file("extdata/logo.png", package="my_package")
system.file("extdata/logo.png", package="ussc")
system.file("extdata", package="ussc")
system.file(package = 'ussc')
list.files(system.file(package = 'ussc'), recursive = T, full.names = T))
list.files(system.file(package = 'ussc'), recursive = T, full.names = T)))
list.files(system.file(package = 'ussc'), recursive = T, full.names = T))
devtools::install_github('usstudiescentre/ussc', ref = 'dev', force = TRUE)
system.file(package = 'ussc')
system.file("extdata", package = 'ussc')
system.file("extdata/logo.png", package = 'ussc')
plot_ussc_logo <- function(ggplot_object){
get_png <- function(filename) {
grid::rasterGrob(png::readPNG(), interpolate = TRUE)
}
logo <- get_png(system.file("extdata/logo.png", package = 'ussc'))
logo_plot <- ggplot(mapping = aes(x = 0:1, y = 1)) +
theme_void() +
annotation_custom(grob = logo, xmin = 0.8, xmax = 1.1)
gridExtra::grid.arrange(ggplot_object, logo_plot,  heights = c(.93,.1))
}
library(showtext)
library(ggplot2)
font_add("Halis GR", regular = "Ahmet Altun - HalisGR-Regular.otf",
bold = "Ahmet Altun - HalisGR-Bold.otf",
italic = "Ahmet Altun - HalisGR-Light.otf",
bolditalic = "Ahmet Altun - HalisGR-BoldItalic.otf")
plot_ussc_logo(p1)
devtools::install_github('usstudiescentre/ussc', ref = 'dev')
system.file("img/logo.png", package = 'ussc')
library(ussc)
system.file("img/logo.png", package = 'ussc')
plot_ussc_logo <- function(ggplot_object){
get_png <- function(filename) {
grid::rasterGrob(png::readPNG(), interpolate = TRUE)
}
logo <- get_png(system.file("img/logo.png", package = 'ussc'))
logo_plot <- ggplot(mapping = aes(x = 0:1, y = 1)) +
theme_void() +
annotation_custom(grob = logo, xmin = 0.8, xmax = 1.1)
gridExtra::grid.arrange(ggplot_object, logo_plot,  heights = c(.93,.1))
}
plot_ussc_logo(p1)
plot_ussc_logo <- function(ggplot_object){
get_png <- function(filename) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE)
}
logo <- get_png(source = "ussc positive.png")
logo_plot <- ggplot(mapping = aes(x = 0:1, y = 1)) +
theme_void() +
annotation_custom(grob = logo, xmin = 0.8, xmax = 1.1)
gridExtra::grid.arrange(ggplot_object, logo_plot,  heights = c(.93,.1))
}
plot_ussc_logo(p1)
plot_ussc_logo <- function(ggplot_object){
get_png <- function(filename) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE)
}
logo <- get_png(filename = "ussc positive.png")
logo_plot <- ggplot(mapping = aes(x = 0:1, y = 1)) +
theme_void() +
annotation_custom(grob = logo, xmin = 0.8, xmax = 1.1)
gridExtra::grid.arrange(ggplot_object, logo_plot,  heights = c(.93,.1))
}
plot_ussc_logo(p1)
p1 <- ggplot(mtcars) +
geom_point(aes(mpg, disp, color = cyl), show.legend = FALSE) +
facet_grid(~cyl) +
scale_colour_ussc(discrete = FALSE) +
labs(title = "Halis",
caption = "AbcXyz") +
theme_ussc()
plot_ussc_logo(p1)
pkgdown::build_site()
system.file("img/logo.png", package = "ussc")
pkgdown::build_site()
plot_ussc_logo <- function(ggplot_object){
get_png <- function(filename) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE)
}
logo <- get_png(filename = "img/logo.png")
logo_plot <- ggplot(mapping = aes(x = 0:1, y = 1)) +
theme_void() +
annotation_custom(grob = logo, xmin = 0.8, xmax = 1.1)
gridExtra::grid.arrange(ggplot_object, logo_plot,  heights = c(.93,.1))
}
plot_ussc_logo(p1)
plot_ussc_logo <- function(ggplot_object){
get_png <- function(filename) {
grid::rasterGrob(png::readPNG(filename), interpolate = TRUE)
}
logo <- get_png(filename = system.file("img/logo.png", package = "ussc"))
logo_plot <- ggplot(mapping = aes(x = 0:1, y = 1)) +
theme_void() +
annotation_custom(grob = logo, xmin = 0.8, xmax = 1.1)
gridExtra::grid.arrange(ggplot_object, logo_plot,  heights = c(.93,.1))
}
plot_ussc_logo(p1)
plot_ussc_logo <- function(ggplot_object){
logo <- grid::rasterGrob(png::readPNG(system.file("img/logo.png",
package = "ussc")),
interpolate = TRUE)
logo_plot <- ggplot(mapping = aes(x = 0:1, y = 1)) +
theme_void() +
annotation_custom(grob = logo, xmin = 0.8, xmax = 1.1)
gridExtra::grid.arrange(ggplot_object, logo_plot,  heights = c(.93,.1))
}
plot_ussc_logo(p1)
system.file("img/logo.png", package = "ussc")
devtools::install_github('usstudiescentre', ref = "dev")
devtools::install_github('usstudiescentre/ussc', ref = "dev")
system.file("img/logo.png", package = "ussc")
plot_ussc_logo <- function(ggplot_object){
logo <- grid::rasterGrob(png::readPNG(system.file("img/logo.png",
package = "ussc")),
interpolate = TRUE)
logo_plot <- ggplot(mapping = aes(x = 0:1, y = 1)) +
theme_void() +
annotation_custom(grob = logo, xmin = 0.8, xmax = 1.1)
gridExtra::grid.arrange(ggplot_object, logo_plot,  heights = c(.93,.1))
}
plot_ussc_logo(p1)
devtools::build_site()
scale_colour_ussc("light")
devtools::build_site()
devtools::build_site()
